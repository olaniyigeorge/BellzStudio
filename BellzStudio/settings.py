"""
Django settings for BellzStudio project.

Generated by 'django-admin startproject' using Django 5.0.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
import os
from datetime import timedelta
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
from dotenv import load_dotenv # type: ignore
load_dotenv()
import dj_database_url # type: ignore
from celery.schedules import crontab


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('SECRET_KEY')

# Deployment Environment  --- "STAGE" | "DEV"   -----  DEBUG is True for both
# ENVT = os.getenv('ENVT')


# # SECURITY WARNING: don't run with debug turned on in production!
# DEBUG = os.getenv('DEBUG') == 'True'


ENVT = "DEV"
DEBUG = True
print(DEBUG)
print(ENVT)

ALLOWED_HOSTS = os.getenv("ALLOWED_HOSTS", "").split()
# [
#     "https://bellzstudio.onrender.com/", 
#     "bellzstudio.onrender.com", 
#     "localhost",
#     ".vercel.app",
#     ".now.sh",
#     "127.0.0.1"
# ]


# Application definition

INSTALLED_APPS = [
    # Third Part Apps
    # "channels",

    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",

    # My Apps
    "main",
    "stories",
    "notes",


    # Third party apps
    # 'corsheaders',
    'rest_framework',
    "rest_framework_simplejwt",
    'django_celery_beat',

]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]


# CHANNEL_LAYERS = {
#         'default': {
#             'BACKEND': 'channels_redis.core.RedisChannelLayer',
#             'CONFIG': {
#                 "hosts": [('127.0.0.1', 6379)],
#             },
#         },
# }


ROOT_URLCONF = "BellzStudio.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "BellzStudio.wsgi.application"
# ASGI_APPLICATION = "BellzStudio.asgi.application"


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases


if ENVT == "DEV":
    DATABASES = {
        "default": {
            "ENGINE": "django.db.backends.sqlite3",
            "NAME": BASE_DIR / "db.sqlite3",
        }
        }
elif ENVT == "STAGE":
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql_psycopg2',
            'NAME': os.getenv('DB_NAME'),
            'USER': os.getenv('DB_USER'),
            'PASSWORD': os.getenv('DB_PASSWORD'),
            'HOST': os.getenv('DB_HOST'),
            'PORT': os.getenv('DB_PORT')
        }
    }


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = 'Africa/Lagos'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

# # if not DEBUG:
# STATICFILES_DIRS= os.path.join(BASE_DIR, 'static'),
# STATIC_URL = '/static/' 
# STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles_build', 'static')


if ENVT == "DEV":
    STATIC_URL = '/static/'
    STATICFILES_DIRS = [BASE_DIR / "static"]
elif ENVT == "STAGE":
    STATIC_URL = '/static/'
    STATIC_ROOT = os.path.join(BASE_DIR, 'static')

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"



AUTH_USER_MODEL  = "main.User"


REST_FRAMEWORK = {
    'DEFAULT_RENDERER_CLASSES': [
        'rest_framework.renderers.JSONRenderer',
        'rest_framework.renderers.BrowsableAPIRenderer',
    ],
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),

}

SIMPLE_JWT = {
    # Cookie expiry date on client
    "ACCESS_TOKEN_LIFETIME": timedelta(hours=2),
    # Cookie expiry date / 7 * 24  on client iif Remember Me is True
    "REFRESH_TOKEN_LIFETIME": timedelta(days=7),
    "UPDATE_LAST_LOGIN": True
}

# Celery Configuration Options
CELERY_BROKER_URL = 'redis://localhost:6379/0'  # Ensure Redis is running locally
CELERY_RESULT_BACKEND = 'redis://localhost:6379/0'
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TIMEZONE = 'UTC'

CELERY_BEAT_SCHEDULER = 'django_celery_beat.schedulers:DatabaseScheduler'



# Optional: To suppress the deprecation warning
CELERY_BROKER_CONNECTION_RETRY_ON_STARTUP = True




CELERY_BEAT_SCHEDULE = {
    'send-promotional-emails-every-monday-830am': {
        'task': 'notes.tasks.send_promotional_emails',
        'schedule': crontab(hour=8, minute=30, day_of_week=1),  # Monday is 1
    },
}


# if DEBUG == True:
if ENVT == "DEV":
    EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
    DEFAULT_FROM_EMAIL = 'olaniyigeorge77@gmail.com'  
# else:
if ENVT == "STAGE":
    EMAIL_BACKEND = 'django_ses.SESBackend'
    DEFAULT_FROM_EMAIL = 'olaniyigeorge77@gmail.com' 
